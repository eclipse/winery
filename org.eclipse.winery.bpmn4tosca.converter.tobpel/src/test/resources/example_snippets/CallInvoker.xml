<bpel:assign xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" name="AssignCreateEC2SIRequest" validate="no">
	<bpel:copy>
		<bpel:from>
			<bpel:literal>
				<impl:invokeOperationAsync xmlns:impl="http://siserver.org/schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<impl:CsarID>TU_Wien_BIG_Test.csar</impl:CsarID>

					<impl:ServiceTemplateIDNamespaceURI>http://trustedcloud.de</impl:ServiceTemplateIDNamespaceURI>
					<impl:ServiceTemplateIDLocalPart>TU_Wien_BIG_Test</impl:ServiceTemplateIDLocalPart>
					<impl:InterfaceName>InterfaceUbuntu</impl:InterfaceName>
					<impl:NodeTemplateID>Ubuntu-13_10-Server</impl:NodeTemplateID>

					<impl:OperationName>runScript</impl:OperationName>
					<impl:ReplyTo/>
					<impl:MessageID>1438069067189</impl:MessageID>
					<!-- Parameter der TOSCA operation -->
					<impl:Params>
						<impl:Param>
							<impl:key>sshKey</impl:key>
							<impl:value>value</impl:value>
						</impl:Param>
						<impl:Param>
							<impl:key>hostname</impl:key>
							<impl:value>value</impl:value>
						</impl:Param>
						<impl:Param>
							<impl:key>script</impl:key>
							<impl:value>value</impl:value>
						</impl:Param>
						<impl:Param>
							<impl:key>sshUser</impl:key>
							<impl:value>value</impl:value>
						</impl:Param>
					</impl:Params>

				</impl:invokeOperationAsync>
			</bpel:literal>
		</bpel:from>
		<bpel:to part="invokeOperationAsync" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87"/>
	</bpel:copy>

	<bpel:copy>
		<bpel:from part="payload" variable="input">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:sshKey]]></bpel:query>
		</bpel:from>
		<bpel:to part="invokeOperationAsync" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[//*[local-name()="Param" and namespace-uri()="http://siserver.org/schema"]/*[local-name()="key" and text()="sshKey"]/following-sibling::*[local-name()="value"]]]></bpel:query>
		</bpel:to>
	</bpel:copy>
	<bpel:copy>
		<bpel:from variable="prop_Ubuntu-13_10-Server_ServerIP"/>
		<bpel:to part="invokeOperationAsync" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[//*[local-name()="Param" and namespace-uri()="http://siserver.org/schema"]/*[local-name()="key" and text()="hostname"]/following-sibling::*[local-name()="value"]]]></bpel:query>
		</bpel:to>
	</bpel:copy>
	<bpel:copy>
		<bpel:from variable="prop_mkdirScript83_84"/>
		<bpel:to part="invokeOperationAsync" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[//*[local-name()="Param" and namespace-uri()="http://siserver.org/schema"]/*[local-name()="key" and text()="script"]/following-sibling::*[local-name()="value"]]]></bpel:query>
		</bpel:to>
	</bpel:copy>
	<bpel:copy>
		<bpel:from part="payload" variable="input">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:sshUser]]></bpel:query>
		</bpel:from>
		<bpel:to part="invokeOperationAsync" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[//*[local-name()="Param" and namespace-uri()="http://siserver.org/schema"]/*[local-name()="key" and text()="sshUser"]/following-sibling::*[local-name()="value"]]]></bpel:query>
		</bpel:to>
	</bpel:copy>

<!-- wichtig, da sync requests gernemal zu lange dauern. Bspw. VM auf Amazon erstellen. -->
	<bpel:copy>
		<bpel:from>
			<bpel:literal>
				<wsa:ReplyTo xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<wsa:Address>http://localhost:9763/services/SIServerCallback</wsa:Address>
				</wsa:ReplyTo>
			</bpel:literal>
		</bpel:from>
		<bpel:to header="ReplyTo" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87">
		</bpel:to>
	</bpel:copy>
	<bpel:copy>
		<bpel:from endpointReference="myRole" partnerLink="InvokePortTypePL86"/>
		<bpel:to header="ReplyTo" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87">
			<bpel:query xmlns:wsa="http://www.w3.org/2005/08/addressing" queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[/*[local-name()='Address']]]></bpel:query>

		</bpel:to>
	</bpel:copy>
	<bpel:copy>
		<bpel:from part="payload" variable="input">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:planCallbackAddress_invoker]]></bpel:query>
		</bpel:from>
		<bpel:to part="invokeOperationAsync" variable="InvokePortTypeinvokeOperationAsyncMessageRequest87">
			<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[//*[local-name()="ReplyTo" and namespace-uri()="http://siserver.org/schema"]]]></bpel:query>
		</bpel:to>
	</bpel:copy>
</bpel:assign>
<!-- correlationSet auch wichtig: 
CorrelationSet bezieht sich auf die MessageID innerhalb der Invoker Requests und Responses. Siehe bei oberstem literal assign.
<vprop:property name="InvokePortTypeProperty" type="xsd:string"/>

Der Alias:
<vprop:propertyAlias messageType="ns0:invokeOperationAsyncMessage" part="invokeOperationAsync" propertyName="tns:InvokePortTypeProperty"><vprop:query><![CDATA[//*[local-name()="MessageID" and namespace-uri()="http://siserver.org/schema"]]]></vprop:query></vprop:propertyAlias>


Dann im passenden Scope:
<correlationSets>
	<correlationSet name="InvokePortTypeCorrelationSet" properties="tns:InvokePortTypeProperty"/>                    
</correlationSets>
-->
<bpel:invoke xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" inputVariable="InvokePortTypeinvokeOperationAsyncMessageRequest87" name="invoke_InvokePortTypeinvokeOperationAsyncMessageRequest87" operation="invokeOperationAsync" partnerLink="InvokePortTypePL86" portType="ns0:InvokePortType">
	<bpel:correlations>
		<bpel:correlation initiate="yes" set="InvokePortTypeCorrelationSet90"/>
	</bpel:correlations>
</bpel:invoke>
<bpel:receive xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" name="receive_CallbackPortTypeinvokeResponseResponse88" operation="callback" partnerLink="InvokePortTypePL86" portType="ns0:CallbackPortType" variable="CallbackPortTypeinvokeResponseResponse88">
	<bpel:correlations>
		<bpel:correlation initiate="no" set="InvokePortTypeCorrelationSet90"/>
	</bpel:correlations>
</bpel:receive>
<bpel:assign xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" name="assign_CallbackPortTypeinvokeResponseResponse88"/>