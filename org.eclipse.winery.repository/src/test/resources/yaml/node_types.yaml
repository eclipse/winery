#
# Copyright 2017 ZTE Corporation.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# and the Apache License 2.0 which both accompany this distribution,
# and are available at http://www.eclipse.org/legal/epl-v10.html
# and http://www.apache.org/licenses/LICENSE-2.0
#

##########################################################################
# TOSCA Namespacing keyword specifies the TOSCA Namespace Alias value which 
# all TOSCA Service Templates MUST always have.
##########################################################################
tosca_definitions_version: tosca_simple_yaml_1_1

node_types:

  ##########################################################################
  # The TOSCA Root Node Type is the default type that all other TOSCA base  
  # Node Types derive from.  This allows for all TOSCA nodes to have a consistent  
  # set of features for modeling and management (e.g., consistent definitions 
  # for requirements, capabilities and lifecycle interfaces).
  ##########################################################################
  tosca.nodes.Root:
    description: The TOSCA Node Type all other TOSCA base Node Types derive from
    attributes:
      tosca_id:
        type: string
      tosca_name:
        type: string
      state:
        type: string
    capabilities:
      feature:
        type: tosca.capabilities.Node
    requirements:
      - dependency:
          capability: tosca.capabilities.Node
          node: tosca.nodes.Root
          relationship: tosca.relationships.DependsOn
          occurrences: [ 0, UNBOUNDED ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard

  ##########################################################################
  # The TOSCA Compute node represents one or more real or virtual processors  
  # of software applications or services along with other essential local 
  # resources.  Collectively, the resources the compute node represents can 
  # logically be viewed as a (real or virtual) “server”.
  ##########################################################################
  tosca.nodes.Compute:
    derived_from: tosca.nodes.Root
    attributes:
      private_address:
        type: string
      public_address:
        type: string
      networks:
        type: map
        entry_schema:
          type: tosca.datatypes.network.NetworkInfo
      ports:
        type: map
        entry_schema:
          type: tosca.datatypes.network.PortInfo
    requirements:
      - local_storage:
          capability: tosca.capabilities.Attachment
          node: tosca.nodes.BlockStorage
          relationship: tosca.relationships.AttachesTo
          occurrences: [0, UNBOUNDED] 
    capabilities:
      host:
        type: tosca.capabilities.Container
        valid_source_types: [tosca.nodes.SoftwareComponent]
      endpoint:
        type: tosca.capabilities.Endpoint.Admin
      os:
        type: tosca.capabilities.OperatingSystem
      scalable:
        type: tosca.capabilities.Scalable
      binding:
        type: tosca.capabilities.network.Bindable


  ##########################################################################
  # The TOSCA SoftwareComponent node represents a generic software component   
  # that can be managed and run by a TOSCA Compute Node Type. 
  ##########################################################################
  tosca.nodes.SoftwareComponent:
    derived_from: tosca.nodes.Root
    properties:
      # domain-specific software component version
      component_version:
        type: version
        required: false
      admin_credential:
        type: tosca.datatypes.Credential
        required: false
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
  
  
  ##########################################################################
  # This TOSA WebServer Node Type represents an abstract software component  
  # or service that is capable of hosting and providing management operations 
  # for one or more WebApplication nodes. 
  ##########################################################################
  tosca.nodes.WebServer:
    derived_from: tosca.nodes.SoftwareComponent
    capabilities:
      # Private, layer 4 endpoints
      data_endpoint: tosca.capabilities.Endpoint
      admin_endpoint: tosca.capabilities.Endpoint.Admin
      host:
        type: tosca.capabilities.Container
        valid_source_types: [ tosca.nodes.WebApplication ]
  
  
  ##########################################################################
  # The TOSCA WebApplication node represents a software application that can 
  # be managed and run by a TOSCA WebServer node.  Specific types of web 
  # applications such as Java, etc. could be derived from this type.
  ##########################################################################
  tosca.nodes.WebApplication:
    derived_from: tosca.nodes.Root
    properties:
      context_root:
        type: string
    capabilities:
      app_endpoint:
        type: tosca.capabilities.Endpoint
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.WebServer
          relationship: tosca.relationships.HostedOn
  
  ##########################################################################
  # The TOSCA DBMS node represents a typical relational, SQL Database  
  # Management System software component or service.
  ##########################################################################
  tosca.nodes.DBMS:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      root_password:
        type: string
        required: false
        description: the optional root password for the DBMS service
      port:
        type: integer
        required: false
        description: the port the DBMS service will listen to for data and requests
    capabilities:   
      host:
        type: tosca.capabilities.Container
        valid_source_types: [ tosca.nodes.Database ]      
  
  ##########################################################################
  # The TOSCA Database node represents a logical database that can be managed
  # and hosted by a TOSCA DBMS node.
  ##########################################################################
  tosca.nodes.Database:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
        description: the logical name of the database
      port:
        type: integer
        description: the port the underlying database service will listen to for data
      user:
        type: string
        description: the optional user account name for DB administration
        required: false
      password:
        type: string
        description: the optional password for the DB user account
        required: false
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.DBMS
          relationship: tosca.relationships.HostedOn
    capabilities:
      database_endpoint:
        type: tosca.capabilities.Endpoint.Database    
        
  
  ##########################################################################
  # The TOSCA ObjectStorage node represents storage that provides the ability 
  # to store data as objects (or BLOBs of data) without consideration for 
  # the underlying filesystem or devices.
  ##########################################################################
  tosca.nodes.ObjectStorage:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
      size:
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 0 GB
      maxsize:
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 0 GB
    capabilities:
      storage_endpoint:
        type: tosca.capabilities.Endpoint          
  
  ##########################################################################
  # The TOSCA BlockStorage node currently represents a server-local block 
  # storage device (i.e., not shared) offering evenly sized blocks of data  
  # from which raw storage volumes can be created.
  ##########################################################################
  tosca.nodes.BlockStorage:
    derived_from: tosca.nodes.Root
    properties:
      size:
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 1 MB
      volume_id:
        type: string
        required: false
      snapshot_id:
        type: string
        required: false
    capabilities:
      attachment:
        type: tosca.capabilities.Attachment
  
  ##########################################################################
  # The TOSCA Container Runtime node represents operating system-level 
  # virtualization technology used to run multiple application services on 
  # a single Compute host. 
  ##########################################################################
  tosca.nodes.Container.Runtime:
    derived_from: tosca.nodes.SoftwareComponent
    capabilities:
      host:
        type: tosca.capabilities.Container
      scalable:
        type: tosca.capabilities.Scalable   
  
  ##########################################################################
  # The TOSCA Container Application node represents an application that 
  # requires Container-level virtualization technology.
  ##########################################################################
  tosca.nodes.Container.Application:
    derived_from: tosca.nodes.Root
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Container
          relationship: tosca.relationships.HostedOn  
  
  ##########################################################################
  # The TOSCA Load Balancer node represents logical function that be used in 
  # conjunction with a Floating Address to distribute an application’s traffic
  # (load) across a number of instances of the application (e.g., for a 
  # clustered or scaled application).
  ##########################################################################
  tosca.nodes.LoadBalancer:
    derived_from: tosca.nodes.Root
    properties:
      algorithm:
        type: string
        required: false
        status: experimental
    capabilities:
      client:
        type: tosca.capabilities.Endpoint.Public
        occurrences: [0, UNBOUNDED] 
        description: the Floating (IP) client’s on the public network can connect to
    requirements:
      - application:
          capability: tosca.capabilities.Endpoint
          relationship: tosca.relationships.RoutesTo
          occurrences: [0, UNBOUNDED] 
          description: Connection to one or more load balanced applications                    
